services:
  main-database:
    image: scylladb/scylla
    container_name: sonicms-main-database
    ports:
      - "${MAIN_DB_PORT}:9042"
    volumes:
      - sonicms-main-db:/var/lib/scylla
    command: ${MAIN_DB_COMMAND}
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "DESCRIBE KEYSPACES"]
      interval: 5s
      timeout: 10s
      retries: 10

  cqlsh:
    image: scylladb/scylla
    container_name: sonicms-cqlsh
    depends_on:
      main-database:
        condition: service_healthy
    entrypoint: "cqlsh -f /docker-entrypoint-initdb.d/init.cql main-database"
    volumes:
      - ./database/init.cql:/docker-entrypoint-initdb.d/init.cql

  qdrant:
    image: qdrant/qdrant:latest
    container_name: sonicms-qdrant
    volumes:
      - sonicms-vector-db:/qdrant/storage
    ports:
      - "${QDRANT_PORT}:6333"
      - "${QDRANT_GRPC_PORT}:6334"

  storage:
    image: minio/minio
    container_name: sonicms-storage
    volumes:
      - sonicms-storage:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_WEB_ADMIN_PORT}:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: ${MINIO_COMMAND}
    healthcheck:
      test: ["CMD", "curl", "-f", "${MINIO_HEALTHCHECK_URL}"]
      interval: 30s
      timeout: 10s
      retries: 3

  cms-api:
    build:
      context: ./cms-api
      dockerfile: Dockerfile
      network: host
    container_name: sonicms-main-server
    environment:
      - CMS_API_PORT=${CMS_API_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_KEYSPACE=${DB_KEYSPACE}
      - QDRANT_HOST=${QDRANT_HOST}
      - QDRANT_PORT=${QDRANT_PORT}
      - STORAGE_URL=${STORAGE_URL}
      - STORAGE_USE_SSL=${STORAGE_USE_SSL}
      - STORAGE_ACCESS_KEY=${STORAGE_ACCESS_KEY}
      - STORAGE_SECRET_KEY=${STORAGE_SECRET_KEY}
      - ONNX_MODEL_PATH=${ONNX_MODEL_PATH}
      - TOKENIZER_PATH=${TOKENIZER_PATH}
    network_mode: host
    depends_on:
      main-database:
        condition: service_healthy

  admin-panel:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
      network: host
    container_name: sonicms-web-client
    ports:
      - "${ADMIN_PANEL_PORT}:3000"
    depends_on:
      - cms-api

volumes:
  sonicms-main-db:
    external: false
  sonicms-vector-db:
    external: false
  sonicms-storage:
    external: false
